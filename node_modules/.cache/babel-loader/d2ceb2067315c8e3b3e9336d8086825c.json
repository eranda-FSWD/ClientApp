{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Sales\\\\Sales.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\nimport SalesModal from \"./SalesModal\";\nimport Pagination from \"../Common/Pagination\";\n\nclass Sales extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSales = () => {\n      axios.get(\"/Sales/GetSales\").then(({\n        data\n      }) => {\n        this.setState({\n          sales: data,\n          totalRows: data\n        });\n        this.fetchRecordsPerPage(this.state.curruntPage, this.state.rowsPerPage);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchCustomers = () => {\n      axios.get(\"/Customers/GetCustomer\").then(({\n        data\n      }) => {\n        this.setState({\n          customers: data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchProducts = () => {\n      axios.get(\"/Products/GetProduct\").then(({\n        data\n      }) => {\n        this.setState({\n          products: data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchStores = () => {\n      axios.get(\"/Stores/GetStore\").then(({\n        data\n      }) => {\n        this.setState({\n          stores: data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleSalesModal = (value, button, sale) => {\n      this.setState({\n        open: value,\n        button: button,\n        sale: sale\n      });\n    };\n\n    this.handleDropdown = (event, data) => {\n      this.setState({\n        curruntPage: 1,\n        rowsPerPage: data.value\n      });\n      this.fetchSales();\n    };\n\n    this.fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\n      const indexOfLastRow = curruntPage * rowsPerPage;\n      const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n      const salesPerPage = this.state.sales.slice(indexOfFirstRow, indexOfLastRow);\n      this.setState({\n        sales: salesPerPage\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        curruntPage: pageNumber\n      });\n      this.fetchSales();\n    };\n\n    this.handleSort = clickedColumn => {\n      const {\n        column,\n        sales,\n        direction\n      } = this.state;\n\n      if (column !== clickedColumn) {\n        console.log(clickedColumn);\n        this.setState({\n          column: clickedColumn,\n          sales: _.sortBy(sales, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        sales: sales.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.state = {\n      customers: [],\n      products: [],\n      stores: [],\n      sales: [],\n      sale: {},\n      open: false,\n      button: \"\",\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      column: null,\n      direction: null,\n      // value: 0,\n      options: [{\n        key: 10,\n        text: \"10\",\n        value: 10\n      }, {\n        key: 20,\n        text: \"20\",\n        value: 20\n      }, {\n        key: 30,\n        text: \"30\",\n        value: 30\n      }],\n      selected: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSales();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchStores();\n  }\n\n  // End Column Sorting\n  render() {\n    const {\n      open,\n      button,\n      sale,\n      sales,\n      column,\n      direction,\n      customers,\n      products,\n      stores\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SalesModal, {\n      open: open,\n      button: button,\n      sales: sales,\n      sale: sale,\n      fetchSales: this.fetchSales,\n      toggleSalesModal: this.toggleSalesModal,\n      customers: customers,\n      products: products,\n      stores: stores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleSalesModal(true, \"Add\", null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, \"New Sales\"), /*#__PURE__*/React.createElement(Table, {\n      sortable: true,\n      celled: true,\n      striped: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"cutomer\" ? direction : null,\n      onClick: () => this.handleSort(\"customer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"product\" ? direction : null,\n      onClick: () => this.handleSort(\"product\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"store\" ? direction : null,\n      onClick: () => this.handleSort(\"store\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"dateSold\" ? direction : null,\n      onClick: () => this.handleSort(\"dateSold\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, \"Date Sold\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, this.state.sales.map(sale => /*#__PURE__*/React.createElement(Table.Row, {\n      key: sale.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, sale.customer.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, sale.product.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, sale.store.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, sale.dateSold), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleSalesModal(true, \"Edit\", sale),\n      color: \"yellow\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }), \"EDIT\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleSalesModal(true, \"\", sale),\n      color: \"red\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }), \"DELETE\")))))), /*#__PURE__*/React.createElement(Pagination, {\n      totalRows: this.state.totalRows.length,\n      rowsPerPage: this.state.rowsPerPage,\n      paginate: this.paginate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      compact: true,\n      selection: true,\n      defaultValue: this.state.selected,\n      options: this.state.options,\n      onChange: this.handleDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Sales;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Sales/Sales.jsx"],"names":["React","Component","axios","_","Button","Container","Table","Dropdown","Icon","SalesModal","Pagination","Sales","constructor","props","fetchSales","get","then","data","setState","sales","totalRows","fetchRecordsPerPage","state","curruntPage","rowsPerPage","catch","err","console","log","fetchCustomers","customers","fetchProducts","products","fetchStores","stores","toggleSalesModal","value","button","sale","open","handleDropdown","event","indexOfLastRow","indexOfFirstRow","salesPerPage","slice","paginate","pageNumber","handleSort","clickedColumn","column","direction","sortBy","reverse","options","key","text","selected","componentDidMount","render","map","id","customer","name","product","store","dateSold","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport SalesModal from \"./SalesModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      products: [],\r\n      stores: [],\r\n\r\n      sales: [],\r\n      sale: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSales();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchStores();\r\n  }\r\n\r\n  fetchSales = () => {\r\n    axios\r\n      .get(\"/Sales/GetSales\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          sales: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Getting all Customers, Products, Stores\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          customers: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  fetchProducts = () => {\r\n    axios\r\n      .get(\"/Products/GetProduct\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          products: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  fetchStores = () => {\r\n    axios\r\n      .get(\"/Stores/GetStore\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          stores: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // End Getting all Customers, Products, Stores\r\n\r\n  toggleSalesModal = (value, button, sale) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      sale: sale,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchSales();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const salesPerPage = this.state.sales.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ sales: salesPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchSales();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, sales, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      console.log(clickedColumn);\r\n      this.setState({\r\n        column: clickedColumn,\r\n        sales: _.sortBy(sales, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      sales: sales.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      sales,\r\n      column,\r\n      direction,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <SalesModal\r\n          open={open}\r\n          button={button}\r\n          sales={sales}\r\n          sale={sale}\r\n          fetchSales={this.fetchSales}\r\n          toggleSalesModal={this.toggleSalesModal}\r\n          customers={customers}\r\n          products={products}\r\n          stores={stores}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleSalesModal(true, \"Add\", null)}\r\n        >\r\n          New Sales\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"cutomer\" ? direction : null}\r\n                onClick={() => this.handleSort(\"customer\")}\r\n              >\r\n                Customer\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"product\" ? direction : null}\r\n                onClick={() => this.handleSort(\"product\")}\r\n              >\r\n                Product\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"store\" ? direction : null}\r\n                onClick={() => this.handleSort(\"store\")}\r\n              >\r\n                Store\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"dateSold\" ? direction : null}\r\n                onClick={() => this.handleSort(\"dateSold\")}\r\n              >\r\n                Date Sold\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.sales.map((sale) => (\r\n              <Table.Row key={sale.id}>\r\n                <Table.Cell>{sale.customer.name}</Table.Cell>\r\n                <Table.Cell>{sale.product.name}</Table.Cell>\r\n                <Table.Cell>{sale.store.name}</Table.Cell>\r\n                <Table.Cell>{sale.dateSold}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleSalesModal(true, \"Edit\", sale)}\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleSalesModal(true, \"\", sale)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sales;\r\n"]},"metadata":{},"sourceType":"module"}