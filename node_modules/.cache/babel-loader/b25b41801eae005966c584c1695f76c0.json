{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Sales\\\\SalesModal.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\n\nclass SalesModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteSale = id => {\n      axios.delete(`/Sales/DeleteSales/${id}`).then(res => {\n        //console.log(res.data);\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addSale = () => {\n      //console.log(this.state.Name, this.state.Address);\n      axios.post(\"/Sales/PostSales\", {\n        productId: this.state.proId,\n        customerId: this.state.cusId,\n        storeId: this.state.stId,\n        dateSold: this.state.dateSold\n      }).then(res => {\n        //console.log(res.data);\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.editSale = id => {\n      const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\n      console.log(this.state.proId, this.state.cusId, this.state.stId, fDate);\n      /* axios\r\n        .put(`/Sales/PutSales/${id}`, {\r\n          id: id,\r\n          productId: this.state.proId,\r\n          customerId: this.state.cusId,\r\n          storeId: this.state.stId,\r\n          dateSold: fDate,\r\n        })\r\n        .then((res) => {\r\n          // console.log(res.data);\r\n          this.props.fetchSales();\r\n          this.props.toggleSalesModal(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        }); */\n    };\n\n    this.handleCusDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        cusId: data.value\n      });\n    };\n\n    this.handleProDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        proId: data.value\n      });\n    };\n\n    this.handleStoDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        stId: data.value\n      });\n    };\n\n    this.state = {\n      customer: {},\n      product: {},\n      store: {},\n      dateSale: null,\n      cusId: 0,\n      proId: 0,\n      stId: 0\n    };\n  }\n\n  render() {\n    const {\n      open,\n      button,\n      sale,\n      toggleSalesModal,\n      customers,\n      products,\n      stores\n    } = this.props;\n    if (button === \"Add\") return /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Create Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"MM/DD/YYYY\",\n      defaultValue: moment().format(\"L\"),\n      onChange: e => this.setState({\n        dateSold: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Customer\",\n      fluid: true,\n      selection: true,\n      options: customers.map(c => ({\n        key: c.id,\n        text: c.name,\n        value: c.id\n      })),\n      onChange: this.handleCusDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Product\",\n      fluid: true,\n      selection: true,\n      options: products.map(p => ({\n        key: p.id,\n        text: p.name,\n        value: p.id\n      })),\n      onChange: this.handleProDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Store\",\n      fluid: true,\n      selection: true,\n      options: stores.map(s => ({\n        key: s.id,\n        text: s.name,\n        value: s.id\n      })),\n      onChange: this.handleStoDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"black\",\n      onClick: () => toggleSalesModal(false, \"\", \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      labelPosition: \"right\",\n      icon: true,\n      onClick: this.addSale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), \"Create\")));else if (button === \"Edit\") return /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Edit Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"MM/DD/YYYY\",\n      defaultValue: moment(sale.dateSold).format(\"L\"),\n      onChange: e => this.setState({\n        dateSold: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Customer\",\n      fluid: true,\n      selection: true,\n      value: sale.customer.id,\n      options: customers.map(c => ({\n        key: c.id,\n        text: c.name,\n        value: c.id\n      })),\n      onChange: e => e.target.value === null ? this.setState({\n        cusId: sale.customer.id\n      }) : this.handleCusDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Product\",\n      fluid: true,\n      selection: true,\n      value: sale.product.id,\n      options: products.map(p => ({\n        key: p.id,\n        text: p.name,\n        value: p.id\n      })),\n      onChange: this.handleProDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Store\",\n      fluid: true,\n      selection: true,\n      value: sale.store.id,\n      options: stores.map(s => ({\n        key: s.id,\n        text: s.name,\n        value: s.id\n      })),\n      onChange: this.handleStoDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"black\",\n      onClick: () => toggleSalesModal(false, \"\", \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      labelPosition: \"right\",\n      color: \"green\",\n      icon: true,\n      onClick: () => this.editSale(sale.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }), \"Edit\")));else return /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    }, \"Delete Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, \"Are you sure?\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"black\",\n      onClick: () => toggleSalesModal(false, \"\", \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      labelPosition: \"right\",\n      icon: true,\n      onClick: () => this.deleteSale(sale.id),\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    }), \"Delete\")));\n  }\n\n}\n\nexport default SalesModal;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Sales/SalesModal.jsx"],"names":["React","Component","axios","moment","Button","Modal","Form","Icon","Dropdown","SalesModal","constructor","props","deleteSale","id","delete","then","res","fetchSales","toggleSalesModal","catch","err","console","log","addSale","post","productId","state","proId","customerId","cusId","storeId","stId","dateSold","editSale","fDate","format","handleCusDropdown","event","data","value","setState","handleProDropdown","handleStoDropdown","customer","product","store","dateSale","render","open","button","sale","customers","products","stores","e","target","map","c","key","text","name","p","s"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\r\n\r\nclass SalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: {},\r\n      product: {},\r\n      store: {},\r\n      dateSale: null,\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    };\r\n  }\r\n\r\n  deleteSale = (id) => {\r\n    axios\r\n      .delete(`/Sales/DeleteSales/${id}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addSale = () => {\r\n    //console.log(this.state.Name, this.state.Address);\r\n    axios\r\n      .post(\"/Sales/PostSales\", {\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: this.state.dateSold,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editSale = (id) => {\r\n    const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\r\n    console.log(this.state.proId, this.state.cusId, this.state.stId, fDate);\r\n    /* axios\r\n      .put(`/Sales/PutSales/${id}`, {\r\n        id: id,\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: fDate,\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      }); */\r\n  };\r\n\r\n  handleCusDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      cusId: data.value,\r\n    });\r\n  };\r\n\r\n  handleProDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      proId: data.value,\r\n    });\r\n  };\r\n\r\n  handleStoDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      stId: data.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      toggleSalesModal,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.props;\r\n\r\n    if (button === \"Add\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  defaultValue={moment().format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSold: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addSale}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else if (button === \"Edit\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  defaultValue={moment(sale.dateSold).format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSold: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  value={sale.customer.id}\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={(e) =>\r\n                    e.target.value === null\r\n                      ? this.setState({ cusId: sale.customer.id })\r\n                      : this.handleCusDropdown\r\n                  }\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  value={sale.product.id}\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  value={sale.store.id}\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editSale(sale.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Sale</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteSale(sale.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SalesModal;\r\n"]},"metadata":{},"sourceType":"module"}