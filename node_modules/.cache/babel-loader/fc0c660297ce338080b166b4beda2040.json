{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Sales\\\\SalesModal.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\n\nclass SalesModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteSale = id => {\n      axios.delete(`/Sales/DeleteSales/${id}`).then(res => {\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addSale = () => {\n      const fDate = this.state.dateSale === null ? this.state.dateSale : moment(this.state.dateSale).format(\"DD MMM, YYYY\");\n      axios.post(\"/Sales/PostSales\", {\n        productId: this.state.proId,\n        customerId: this.state.cusId,\n        storeId: this.state.stId,\n        dateSold: fDate\n      }).then(res => {\n        //console.log(res.data);\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n        this.setState({\n          proId: 0,\n          cusId: 0,\n          stId: 0,\n          dateSale: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.editSale = id => {\n      const {\n        proId,\n        cusId,\n        stId,\n        dateSale\n      } = this.state;\n      const fDate = dateSale === null ? dateSale : moment(dateSale).format(\"DD MMM, YYYY\");\n      const saleId = id === undefined ? this.props.sale.id : id;\n      console.log(dateSale);\n      axios.put(`/Sales/PutSales/${id}`, {\n        id: saleId,\n        productId: proId === 0 ? this.props.sale.product.id : proId,\n        customerId: cusId === 0 ? this.props.sale.customer.id : cusId,\n        storeId: stId === 0 ? this.props.sale.store.id : stId,\n        dateSold: fDate === null ? this.props.sale.dateSold : fDate\n      }).then(res => {\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n        this.setState({\n          proId: 0,\n          cusId: 0,\n          stId: 0,\n          dateSale: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCusDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        cusId: data.value\n      });\n    };\n\n    this.handleProDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        proId: data.value\n      });\n    };\n\n    this.handleStoDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        stId: data.value\n      });\n    };\n\n    this.state = {\n      customer: {},\n      product: {},\n      store: {},\n      dateSale: null,\n      cusId: 0,\n      proId: 0,\n      stId: 0\n    };\n  }\n  /*   componentDidMount() {\r\n    this.setState({\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    });\r\n  } */\n\n\n  render() {\n    const {\n      open,\n      button,\n      sale,\n      toggleSalesModal,\n      customers,\n      products,\n      stores\n    } = this.props;\n\n    if (button === \"Add\") {\n      return /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"Create Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"MM/DD/YYYY\",\n        defaultValue: moment().format(\"L\"),\n        onChange: e => this.setState({\n          dateSale: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Customer\",\n        fluid: true,\n        selection: true,\n        options: customers.map(c => ({\n          key: c.id,\n          text: c.name,\n          value: c.id\n        })),\n        onChange: this.handleCusDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Product\",\n        fluid: true,\n        selection: true,\n        options: products.map(p => ({\n          key: p.id,\n          text: p.name,\n          value: p.id\n        })),\n        onChange: this.handleProDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Store\",\n        fluid: true,\n        selection: true,\n        options: stores.map(s => ({\n          key: s.id,\n          text: s.name,\n          value: s.id\n        })),\n        onChange: this.handleStoDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: () => toggleSalesModal(false, \"\", \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.stId && this.state.cusId === 0,\n        color: \"green\",\n        labelPosition: \"right\",\n        icon: true,\n        onClick: this.addSale,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }), \"Create\")));\n    } else if (button === \"Edit\") {\n      return /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, \"Edit Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n        size: \"small\",\n        defaultValue: moment(sale.dateSold).format(\"L\"),\n        onChange: e => this.setState({\n          dateSale: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n        fluid: true,\n        selection: true,\n        defaultValue: sale.customerId,\n        options: customers.map(c => ({\n          key: c.id,\n          text: c.name,\n          value: c.id\n        })),\n        onChange: this.handleCusDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n        defaultValue: sale.productId,\n        fluid: true,\n        selection: true,\n        options: products.map(p => ({\n          key: p.id,\n          text: p.name,\n          value: p.id\n        })),\n        onChange: this.handleProDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n        defaultValue: sale.storeId,\n        fluid: true,\n        selection: true,\n        options: stores.map(s => ({\n          key: s.id,\n          text: s.name,\n          value: s.id\n        })),\n        onChange: this.handleStoDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: () => toggleSalesModal(false, \"\", \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.stId === 0,\n        labelPosition: \"right\",\n        color: \"green\",\n        icon: true,\n        onClick: () => this.editSale(sale.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }\n      }), \"Edit\")));\n    } else return /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, \"Delete Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }, \"Are you sure?\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"black\",\n      onClick: () => toggleSalesModal(false, \"\", \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      labelPosition: \"right\",\n      icon: true,\n      onClick: () => this.deleteSale(sale.id),\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }), \"Delete\")));\n  }\n\n}\n\nexport default SalesModal;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Sales/SalesModal.jsx"],"names":["React","Component","axios","moment","Button","Modal","Form","Icon","Dropdown","SalesModal","constructor","props","deleteSale","id","delete","then","res","fetchSales","toggleSalesModal","catch","err","console","log","addSale","fDate","state","dateSale","format","post","productId","proId","customerId","cusId","storeId","stId","dateSold","setState","editSale","saleId","undefined","sale","put","product","customer","store","handleCusDropdown","event","data","value","handleProDropdown","handleStoDropdown","render","open","button","customers","products","stores","e","target","map","c","key","text","name","p","s"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\r\n\r\nclass SalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: {},\r\n      product: {},\r\n      store: {},\r\n      dateSale: null,\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    };\r\n  }\r\n  /*   componentDidMount() {\r\n    this.setState({\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    });\r\n  } */\r\n\r\n  deleteSale = (id) => {\r\n    axios\r\n      .delete(`/Sales/DeleteSales/${id}`)\r\n      .then((res) => {\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addSale = () => {\r\n    const fDate =\r\n      this.state.dateSale === null\r\n        ? this.state.dateSale\r\n        : moment(this.state.dateSale).format(\"DD MMM, YYYY\");\r\n    axios\r\n      .post(\"/Sales/PostSales\", {\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: fDate,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n        this.setState({ proId: 0, cusId: 0, stId: 0, dateSale: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editSale = (id) => {\r\n    const { proId, cusId, stId, dateSale } = this.state;\r\n    const fDate =\r\n      dateSale === null ? dateSale : moment(dateSale).format(\"DD MMM, YYYY\");\r\n    const saleId = id === undefined ? this.props.sale.id : id;\r\n    console.log(dateSale);\r\n    axios\r\n      .put(`/Sales/PutSales/${id}`, {\r\n        id: saleId,\r\n        productId: proId === 0 ? this.props.sale.product.id : proId,\r\n        customerId: cusId === 0 ? this.props.sale.customer.id : cusId,\r\n        storeId: stId === 0 ? this.props.sale.store.id : stId,\r\n        dateSold: fDate === null ? this.props.sale.dateSold : fDate,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n        this.setState({ proId: 0, cusId: 0, stId: 0, dateSale: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleCusDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      cusId: data.value,\r\n    });\r\n  };\r\n\r\n  handleProDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      proId: data.value,\r\n    });\r\n  };\r\n\r\n  handleStoDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      stId: data.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      toggleSalesModal,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.props;\r\n\r\n    if (button === \"Add\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  defaultValue={moment().format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSale: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.stId && this.state.cusId === 0}\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addSale}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else if (button === \"Edit\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  size=\"small\"\r\n                  defaultValue={moment(sale.dateSold).format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSale: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  defaultValue={sale.customerId}\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  defaultValue={sale.productId}\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  defaultValue={sale.storeId}\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.stId === 0}\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editSale(sale.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Sale</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteSale(sale.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SalesModal;\r\n"]},"metadata":{},"sourceType":"module"}