{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Dropdown } from \"semantic-ui-react\";\nimport CustomerTable from \"./CustomerTable\";\nimport CustomerModal from \"./CustomerModal\";\n\nclass Customer extends Component {\n  constructor() {\n    this.state = {\n      customers: [],\n      open: false,\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      customer: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  } // Records per the page\n\n\n  render() {\n    const {\n      open,\n      button\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomerModal, {\n      open: open,\n      button: button,\n      toggleCustomerModal: this.toggleCustomerModal.bind(this),\n      fetchCustomer: this.fetchCustomer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleCustomerModal(true, \"Add\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"New Customer\"), /*#__PURE__*/React.createElement(CustomerTable, {\n      customers: this.state.customers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      options: [{\n        key: \"10\",\n        text: \"10\",\n        value: 10\n      }, {\n        key: \"20\",\n        text: \"20\",\n        value: 20\n      }, {\n        key: \"30\",\n        text: \"30\",\n        value: 30\n      }],\n      onChange: e => this.onChangeRowNumbers(e.target.value) //onSelect={(value) => console.log(\"selected!\", value)} // always fires once a selection happens even if there is no change\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Customer;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/Customer.jsx"],"names":["React","Component","axios","Button","Container","Dropdown","CustomerTable","CustomerModal","Customer","constructor","state","customers","open","rowsPerPage","totalRows","curruntPage","customer","componentDidMount","fetchCustomers","render","button","toggleCustomerModal","bind","fetchCustomer","key","text","value","e","onChangeRowNumbers","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,mBAA5C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,IAAI,EAAE,KAFK;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,SAAS,EAAE,CAJA;AAKXC,MAAAA,WAAW,EAAE,CALF;AAMXC,MAAAA,QAAQ,EAAE;AANC,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,cAAL;AACD,GAd8B,CAgB/B;;;AAuCAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,QAAmB,KAAKV,KAA9B;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,MAAM,EAAEQ,MAFV;AAGE,MAAA,mBAAmB,EAAE,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAHvB;AAIE,MAAA,aAAa,EAAE,KAAKC,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKD,mBAAL,CAAyB,IAAzB,EAA+B,KAA/B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAaE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAcE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,CACP;AACEa,QAAAA,GAAG,EAAE,IADP;AAEEC,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADO,EAMP;AACEF,QAAAA,GAAG,EAAE,IADP;AAEEC,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANO,EAWP;AACEF,QAAAA,GAAG,EAAE,IADP;AAEEC,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAXO,CADX;AAkBE,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,kBAAL,CAAwBD,CAAC,CAACE,MAAF,CAASH,KAAjC,CAlBnB,CAmBE;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAsCD;;AA/F8B;;AAkGjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Dropdown } from \"semantic-ui-react\";\r\nimport CustomerTable from \"./CustomerTable\";\r\nimport CustomerModal from \"./CustomerModal\";\r\n\r\nclass Customer extends Component {\r\n  constructor() {\r\n    this.state = {\r\n      customers: [],\r\n      open: false,\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const customersPerPage = this.state.customers.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ customers: customersPerPage });\r\n  };\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          customers: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  /* onChangeRowNumbers = (value) => {\r\n    this.setState({\r\n      rowsPerPage: value,\r\n    });\r\n    console.log(this.state.rowsPerPage, value);\r\n  }; */\r\n\r\n  toggleCustomerModal = (value, button) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { open, button } = this.state;\r\n    return (\r\n      <Container>\r\n        <CustomerModal\r\n          open={open}\r\n          button={button}\r\n          toggleCustomerModal={this.toggleCustomerModal.bind(this)}\r\n          fetchCustomer={this.fetchCustomer.bind(this)}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleCustomerModal(true, \"Add\")}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        <CustomerTable customers={this.state.customers} />\r\n        <Dropdown\r\n          options={[\r\n            {\r\n              key: \"10\",\r\n              text: \"10\",\r\n              value: 10,\r\n            },\r\n            {\r\n              key: \"20\",\r\n              text: \"20\",\r\n              value: 20,\r\n            },\r\n            {\r\n              key: \"30\",\r\n              text: \"30\",\r\n              value: 30,\r\n            },\r\n          ]}\r\n          onChange={(e) => this.onChangeRowNumbers(e.target.value)}\r\n          //onSelect={(value) => console.log(\"selected!\", value)} // always fires once a selection happens even if there is no change\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}