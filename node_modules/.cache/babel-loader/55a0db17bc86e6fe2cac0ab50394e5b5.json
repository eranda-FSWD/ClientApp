{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Store\\\\Store.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\nimport StoreModal from \"./StoreModal\";\nimport Pagination from \"../Common/Pagination\";\n\nclass Store extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchStores = () => {\n      axios.get(\"/Stores/GetStore\").then(({\n        data\n      }) => {\n        // console.log(data);\n        this.setState({\n          stores: data,\n          data: data,\n          totalRows: data\n        });\n        this.fetchRecordsPerPage(this.state.curruntPage, this.state.rowsPerPage); //console.log(this.state.totalRows.length);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleStoreModal = (value, button, store) => {\n      this.setState({\n        open: value,\n        button: button,\n        store: store\n      });\n    };\n\n    this.handleDropdown = (event, data) => {\n      this.setState({\n        curruntPage: 1,\n        rowsPerPage: data.value\n      });\n      this.fetchStores();\n    };\n\n    this.fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\n      const indexOfLastRow = curruntPage * rowsPerPage;\n      const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n      const storesPerPage = this.state.stores.slice(indexOfFirstRow, indexOfLastRow);\n      this.setState({\n        stores: storesPerPage\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        curruntPage: pageNumber\n      });\n      this.fetchStores();\n    };\n\n    this.handleSort = clickedColumn => {\n      const {\n        column,\n        data,\n        direction\n      } = this.state;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          stores: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        stores: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.state = {\n      stores: [],\n      store: {},\n      open: false,\n      button: \"\",\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      column: null,\n      direction: null,\n      // value: 0,\n      options: [{\n        key: 10,\n        text: \"10\",\n        value: 10\n      }, {\n        key: 20,\n        text: \"20\",\n        value: 20\n      }, {\n        key: 30,\n        text: \"30\",\n        value: 30\n      }],\n      selected: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStores();\n  }\n\n  // End Column Sorting\n  render() {\n    const {\n      open,\n      button,\n      store,\n      column,\n      direction\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StoreModal, {\n      open: open,\n      button: button,\n      store: store,\n      fetchStores: this.fetchStores,\n      toggleStoreModal: this.toggleStoreModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleStoreModal(true, \"Add\", null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"New Store\"), /*#__PURE__*/React.createElement(Table, {\n      sortable: true,\n      celled: true,\n      striped: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"Name\" ? direction : null,\n      onClick: () => this.handleSort(\"Name\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"Address\" ? direction : null,\n      onClick: () => this.handleSort(\"Address\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, this.state.stores.map(store => /*#__PURE__*/React.createElement(Table.Row, {\n      key: store.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, store.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, store.address), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleStoreModal(true, \"Edit\", store),\n      color: \"yellow\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), \"EDIT\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleStoreModal(true, \"\", store),\n      color: \"red\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), \"DELETE\")))))), /*#__PURE__*/React.createElement(Pagination, {\n      totalRows: this.state.totalRows.length,\n      rowsPerPage: this.state.rowsPerPage,\n      paginate: this.paginate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      compact: true,\n      selection: true,\n      defaultValue: this.state.selected,\n      options: this.state.options,\n      onChange: this.handleDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Store/Store.jsx"],"names":["React","Component","axios","_","Button","Container","Table","Dropdown","Icon","StoreModal","Pagination","Store","constructor","props","fetchStores","get","then","data","setState","stores","totalRows","fetchRecordsPerPage","state","curruntPage","rowsPerPage","catch","err","console","log","toggleStoreModal","value","button","store","open","handleDropdown","event","indexOfLastRow","indexOfFirstRow","storesPerPage","slice","paginate","pageNumber","handleSort","clickedColumn","column","direction","sortBy","reverse","options","key","text","selected","componentDidMount","render","map","id","name","address","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport StoreModal from \"./StoreModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Store extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stores: [],\r\n      store: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStores();\r\n  }\r\n\r\n  fetchStores = () => {\r\n    axios\r\n      .get(\"/Stores/GetStore\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          stores: data,\r\n          data: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n        //console.log(this.state.totalRows.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleStoreModal = (value, button, store) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      store: store,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchStores();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const storesPerPage = this.state.stores.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ stores: storesPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchStores();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, data, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        stores: _.sortBy(data, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      stores: data.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const { open, button, store, column, direction } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <StoreModal\r\n          open={open}\r\n          button={button}\r\n          store={store}\r\n          fetchStores={this.fetchStores}\r\n          toggleStoreModal={this.toggleStoreModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleStoreModal(true, \"Add\", null)}\r\n        >\r\n          New Store\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"Name\" ? direction : null}\r\n                onClick={() => this.handleSort(\"Name\")}\r\n              >\r\n                Name\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"Address\" ? direction : null}\r\n                onClick={() => this.handleSort(\"Address\")}\r\n              >\r\n                Address\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.stores.map((store) => (\r\n              <Table.Row key={store.id}>\r\n                <Table.Cell>{store.name}</Table.Cell>\r\n                <Table.Cell>{store.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleStoreModal(true, \"Edit\", store)}\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleStoreModal(true, \"\", store)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Store;\r\n"]},"metadata":{},"sourceType":"module"}