{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Common\\\\Table.jsx\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nconst tableData = [{\n  name: \"John\",\n  age: 15,\n  gender: \"Male\"\n}, {\n  name: \"Amber\",\n  age: 40,\n  gender: \"Female\"\n}, {\n  name: \"Leslie\",\n  age: 25,\n  gender: \"Other\"\n}, {\n  name: \"Ben\",\n  age: 70,\n  gender: \"Male\"\n}];\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE_SORT\":\n      if (state.column === action.column) {\n        return { ...state,\n          data: state.data.slice().reverse(),\n          direction: state.direction === \"ascending\" ? \"descending\" : \"ascending\"\n        };\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]),\n        direction: \"ascending\"\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction TableExampleSortable() {\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    column: null,\n    data: tableData,\n    direction: null\n  });\n  const {\n    column,\n    data,\n    direction\n  } = state;\n  return /*#__PURE__*/React.createElement(Table, {\n    sortable: true,\n    celled: true,\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    sorted: column === \"name\" ? direction : null,\n    onClick: () => dispatch({\n      type: \"CHANGE_SORT\",\n      column: \"name\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    sorted: column === \"age\" ? direction : null,\n    onClick: () => dispatch({\n      type: \"CHANGE_SORT\",\n      column: \"age\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    sorted: column === \"gender\" ? direction : null,\n    onClick: () => dispatch({\n      type: \"CHANGE_SORT\",\n      column: \"gender\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Gender\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, data.map(({\n    age,\n    gender,\n    name\n  }) => /*#__PURE__*/React.createElement(Table.Row, {\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, age), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, gender)))));\n}\n\nexport default TableExampleSortable;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Common/Table.jsx"],"names":["_","React","Table","tableData","name","age","gender","exampleReducer","state","action","type","column","data","slice","reverse","direction","sortBy","Error","TableExampleSortable","dispatch","useReducer","map"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nconst tableData = [\r\n  { name: \"John\", age: 15, gender: \"Male\" },\r\n  { name: \"Amber\", age: 40, gender: \"Female\" },\r\n  { name: \"Leslie\", age: 25, gender: \"Other\" },\r\n  { name: \"Ben\", age: 70, gender: \"Male\" },\r\n];\r\n\r\nfunction exampleReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_SORT\":\r\n      if (state.column === action.column) {\r\n        return {\r\n          ...state,\r\n          data: state.data.slice().reverse(),\r\n          direction:\r\n            state.direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n        };\r\n      }\r\n\r\n      return {\r\n        column: action.column,\r\n        data: _.sortBy(state.data, [action.column]),\r\n        direction: \"ascending\",\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction TableExampleSortable() {\r\n  const [state, dispatch] = React.useReducer(exampleReducer, {\r\n    column: null,\r\n    data: tableData,\r\n    direction: null,\r\n  });\r\n  const { column, data, direction } = state;\r\n\r\n  return (\r\n    <Table sortable celled fixed>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell\r\n            sorted={column === \"name\" ? direction : null}\r\n            onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"name\" })}\r\n          >\r\n            Name\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell\r\n            sorted={column === \"age\" ? direction : null}\r\n            onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"age\" })}\r\n          >\r\n            Age\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell\r\n            sorted={column === \"gender\" ? direction : null}\r\n            onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"gender\" })}\r\n          >\r\n            Gender\r\n          </Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {data.map(({ age, gender, name }) => (\r\n          <Table.Row key={name}>\r\n            <Table.Cell>{name}</Table.Cell>\r\n            <Table.Cell>{age}</Table.Cell>\r\n            <Table.Cell>{gender}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default TableExampleSortable;\r\n"]},"metadata":{},"sourceType":"module"}