{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Sales\\\\SalesModal.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\n\nclass SalesModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteSale = id => {\n      axios.delete(`/Sales/DeleteSales/${id}`).then(res => {\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addSale = () => {\n      const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\n      axios.post(\"/Sales/PostSales\", {\n        productId: this.state.proId,\n        customerId: this.state.cusId,\n        storeId: this.state.stId,\n        dateSold: fDate\n      }).then(res => {\n        //console.log(res.data);\n        this.props.fetchSales();\n        this.props.toggleSalesModal(false);\n        this.setState({\n          proId: 0,\n          cusId: 0,\n          stId: 0,\n          dateSold: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.editSale = id => {\n      console.log(id, this.state.proId, this.state.cusId, this.state.stId, this.state.dateSold);\n      this.setState({\n        proId: 0,\n        cusId: 0,\n        stId: 0,\n        dateSold: \"\"\n      });\n      /*    const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\r\n      axios\r\n        .put(`/Sales/PutSales/${id}`, {\r\n          id: id,\r\n          productId: this.state.proId,\r\n          customerId: this.state.cusId,\r\n          storeId: this.state.stId,\r\n          dateSold: fDate,\r\n        })\r\n        .then((res) => {\r\n          // console.log(res.data);\r\n          this.props.fetchSales();\r\n          this.props.toggleSalesModal(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        }); */\n    };\n\n    this.handleCusDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        cusId: data.value\n      });\n    };\n\n    this.handleProDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        proId: data.value\n      });\n    };\n\n    this.handleStoDropdown = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        stId: data.value\n      });\n    };\n\n    this.state = {\n      customer: {},\n      product: {},\n      store: {},\n      dateSale: null,\n      cusId: 0,\n      proId: 0,\n      stId: 0\n    };\n  }\n\n  render() {\n    const {\n      open,\n      button,\n      sale,\n      toggleSalesModal,\n      customers,\n      products,\n      stores\n    } = this.props;\n\n    if (button === \"Add\") {\n      return /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"Create Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"MM/DD/YYYY\",\n        defaultValue: moment().format(\"L\"),\n        onChange: e => this.setState({\n          dateSold: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Customer\",\n        fluid: true,\n        selection: true,\n        options: customers.map(c => ({\n          key: c.id,\n          text: c.name,\n          value: c.id\n        })),\n        onChange: this.handleCusDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Product\",\n        fluid: true,\n        selection: true,\n        options: products.map(p => ({\n          key: p.id,\n          text: p.name,\n          value: p.id\n        })),\n        onChange: this.handleProDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Store\",\n        fluid: true,\n        selection: true,\n        options: stores.map(s => ({\n          key: s.id,\n          text: s.name,\n          value: s.id\n        })),\n        onChange: this.handleStoDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: () => toggleSalesModal(false, \"\", \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.stId === 0,\n        color: \"green\",\n        labelPosition: \"right\",\n        icon: true,\n        onClick: this.addSale,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }), \"Create\")));\n    } else if (button === \"Edit\") {\n      return /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, \"Edit Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, \"Date sold\"), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"MM/DD/YYYY\",\n        defaultValue: moment(sale.dateSold).format(\"L\"),\n        onChange: e => this.setState({\n          dateSold: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Customer\",\n        fluid: true,\n        selection: true,\n        defaultValue: sale.customer.id,\n        options: customers.map(c => ({\n          key: c.id,\n          text: c.name,\n          value: c.id\n        })),\n        onChange: this.handleCusDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Product\",\n        fluid: true,\n        selection: true,\n        defaultValue: sale.product.id,\n        options: products.map(p => ({\n          key: p.id,\n          text: p.name,\n          value: p.id\n        })),\n        onChange: this.handleProDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, \"Store\"), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Select Store\",\n        fluid: true,\n        selection: true,\n        defaultValue: sale.store.id,\n        options: stores.map(s => ({\n          key: s.id,\n          text: s.name,\n          value: s.id\n        })),\n        onChange: this.handleStoDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: () => toggleSalesModal(false, \"\", \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.stId === 0,\n        labelPosition: \"right\",\n        color: \"green\",\n        icon: true,\n        onClick: () => this.editSale(sale.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }), \"Edit\")));\n    } else return /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, \"Delete Sale\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, \"Are you sure?\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"black\",\n      onClick: () => toggleSalesModal(false, \"\", \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      labelPosition: \"right\",\n      icon: true,\n      onClick: () => this.deleteSale(sale.id),\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }), \"Delete\")));\n  }\n\n}\n\nexport default SalesModal;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Sales/SalesModal.jsx"],"names":["React","Component","axios","moment","Button","Modal","Form","Icon","Dropdown","SalesModal","constructor","props","deleteSale","id","delete","then","res","fetchSales","toggleSalesModal","catch","err","console","log","addSale","fDate","state","dateSold","format","post","productId","proId","customerId","cusId","storeId","stId","setState","editSale","handleCusDropdown","event","data","value","handleProDropdown","handleStoDropdown","customer","product","store","dateSale","render","open","button","sale","customers","products","stores","e","target","map","c","key","text","name","p","s"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\r\n\r\nclass SalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: {},\r\n      product: {},\r\n      store: {},\r\n      dateSale: null,\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    };\r\n  }\r\n\r\n  deleteSale = (id) => {\r\n    axios\r\n      .delete(`/Sales/DeleteSales/${id}`)\r\n      .then((res) => {\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addSale = () => {\r\n    const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\r\n    axios\r\n      .post(\"/Sales/PostSales\", {\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: fDate,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n        this.setState({ proId: 0, cusId: 0, stId: 0, dateSold: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editSale = (id) => {\r\n    console.log(\r\n      id,\r\n      this.state.proId,\r\n      this.state.cusId,\r\n      this.state.stId,\r\n      this.state.dateSold\r\n    );\r\n    this.setState({ proId: 0, cusId: 0, stId: 0, dateSold: \"\" });\r\n    /*    const fDate = moment(this.state.dateSold).format(\"DD MMM, YYYY\");\r\n    axios\r\n      .put(`/Sales/PutSales/${id}`, {\r\n        id: id,\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: fDate,\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      }); */\r\n  };\r\n\r\n  handleCusDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      cusId: data.value,\r\n    });\r\n  };\r\n\r\n  handleProDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      proId: data.value,\r\n    });\r\n  };\r\n\r\n  handleStoDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      stId: data.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      toggleSalesModal,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.props;\r\n\r\n    if (button === \"Add\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  defaultValue={moment().format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSold: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.stId === 0}\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addSale}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else if (button === \"Edit\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  defaultValue={moment(sale.dateSold).format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSold: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  defaultValue={sale.customer.id}\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  defaultValue={sale.product.id}\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  defaultValue={sale.store.id}\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.stId === 0}\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editSale(sale.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Sale</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteSale(sale.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SalesModal;\r\n"]},"metadata":{},"sourceType":"module"}