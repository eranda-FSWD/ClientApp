{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\nimport CustomerModal from \"./CustomerModal\";\nimport Pagination from \"../Common/Pagination\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCustomers = () => {\n      axios.get(\"/Customers/GetCustomer\").then(({\n        data\n      }) => {\n        // console.log(data);\n        this.setState({\n          customers: data,\n          totalRows: data\n        });\n        this.fetchRecordsPerPage(this.state.curruntPage, this.state.rowsPerPage);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleCustomerModal = (value, button, customer) => {\n      this.setState({\n        open: value,\n        button: button,\n        customer: customer\n      });\n    };\n\n    this.handleDropdown = (event, data) => {\n      this.setState({\n        curruntPage: 1,\n        rowsPerPage: data.value\n      });\n      this.fetchCustomers();\n    };\n\n    this.fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\n      const indexOfLastRow = curruntPage * rowsPerPage;\n      const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n      const customersPerPage = this.state.customers.slice(indexOfFirstRow, indexOfLastRow);\n      this.setState({\n        customers: customersPerPage\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        curruntPage: pageNumber\n      });\n      this.fetchCustomers();\n    };\n\n    this.state = {\n      customers: [],\n      customer: {},\n      open: false,\n      button: \"\",\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      // value: 0,\n      options: [{\n        key: 10,\n        text: \"10\",\n        value: 10\n      }, {\n        key: 20,\n        text: \"20\",\n        value: 20\n      }, {\n        key: 30,\n        text: \"30\",\n        value: 30\n      }],\n      selected: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  } // Column Sorting\n\n  /*  raiseSort = (columnName) => {\r\n    const sortColumn = { ...this.state.customers };\r\n    if (sortColumn.columnName === columnName)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.columnName = columnName;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n  };\r\n    renderSortIcon = (columnName) => {\r\n    const { sortColumn } = this.props;\r\n      if (columnName !== sortColumn.) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  }; */\n  // End Column Sorting\n\n\n  render() {\n    const {\n      open,\n      button,\n      customer\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomerModal, {\n      open: open,\n      button: button,\n      customer: customer,\n      fetchCustomers: this.fetchCustomers,\n      toggleCustomerModal: this.toggleCustomerModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleCustomerModal(true, \"Add\", null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"New Customer\"), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      striped: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      onClick: () => this.raiseSort(column.path),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, this.state.customers.map(customer => /*#__PURE__*/React.createElement(Table.Row, {\n      key: customer.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, customer.address), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, \"Edit\", customer),\n      color: \"yellow\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }), \"EDIT\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, \"\", customer),\n      color: \"red\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), \"DELETE\")))))), /*#__PURE__*/React.createElement(Pagination, {\n      totalRows: this.state.totalRows.length,\n      rowsPerPage: this.state.rowsPerPage,\n      paginate: this.paginate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      compact: true,\n      selection: true,\n      defaultValue: this.state.selected,\n      options: this.state.options,\n      onChange: this.handleDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/* const options = [\r\n  { key: 10, text: \"10\", value: 10 },\r\n  { key: 20, text: \"20\", value: 20 },\r\n  { key: 30, text: \"30\", value: 30 },\r\n],\r\nselected: [10], */\n\n\nexport default Customer;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/Customer.jsx"],"names":["React","Component","axios","Button","Container","Table","Dropdown","Icon","CustomerModal","Pagination","Customer","constructor","props","fetchCustomers","get","then","data","setState","customers","totalRows","fetchRecordsPerPage","state","curruntPage","rowsPerPage","catch","err","console","log","toggleCustomerModal","value","button","customer","open","handleDropdown","event","indexOfLastRow","indexOfFirstRow","customersPerPage","slice","paginate","pageNumber","options","key","text","selected","componentDidMount","render","raiseSort","column","path","map","id","name","address","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport CustomerModal from \"./CustomerModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  // Column Sorting\r\n  /*  raiseSort = (columnName) => {\r\n    const sortColumn = { ...this.state.customers };\r\n    if (sortColumn.columnName === columnName)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.columnName = columnName;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n  };\r\n\r\n  renderSortIcon = (columnName) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (columnName !== sortColumn.) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  }; */\r\n  // End Column Sorting\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          customers: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleCustomerModal = (value, button, customer) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      customer: customer,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchCustomers();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const customersPerPage = this.state.customers.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ customers: customersPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchCustomers();\r\n  };\r\n\r\n  render() {\r\n    const { open, button, customer } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <CustomerModal\r\n          open={open}\r\n          button={button}\r\n          customer={customer}\r\n          fetchCustomers={this.fetchCustomers}\r\n          toggleCustomerModal={this.toggleCustomerModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleCustomerModal(true, \"Add\", null)}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        {/* Table */}\r\n        <Table celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell onClick={() => this.raiseSort(column.path)}>\r\n                Name\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Address</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.customers.map((customer) => (\r\n              <Table.Row key={customer.id}>\r\n                <Table.Cell>{customer.name}</Table.Cell>\r\n                <Table.Cell>{customer.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleCustomerModal(true, \"Edit\", customer)\r\n                    }\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleCustomerModal(true, \"\", customer)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n/* const options = [\r\n  { key: 10, text: \"10\", value: 10 },\r\n  { key: 20, text: \"20\", value: 20 },\r\n  { key: 30, text: \"30\", value: 30 },\r\n],\r\nselected: [10], */\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}