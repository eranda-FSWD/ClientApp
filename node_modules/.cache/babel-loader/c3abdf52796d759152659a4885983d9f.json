{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Table, Icon } from \"semantic-ui-react\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCustomers = () => {\n      axios.get(\"/Customers/GetCustomer\").then(({\n        data\n      }) => {\n        // console.log(data);\n        this.setState({\n          customers: data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleCustomerModal = (value, button, customer) => {\n      this.setState({\n        open: value,\n        button: button,\n        customer: customer\n      });\n    };\n\n    this.state = {\n      customers: [],\n      customer: {},\n      open: false,\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      value: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleCustomerModal(true, \"Add\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"New Customer\"), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      striped: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, this.customers.map(customer => /*#__PURE__*/React.createElement(Table.Row, {\n      key: customer.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, customer.address), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, \"Edit\", customer),\n      color: \"yellow\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), \"EDIT\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, null, customer),\n      color: \"red\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), \"DELETE\")))))));\n  }\n\n}\n\nexport default Customer;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/Customer.jsx"],"names":["React","Component","axios","Button","Container","Table","Icon","Customer","constructor","props","fetchCustomers","get","then","data","setState","customers","catch","err","console","log","toggleCustomerModal","value","button","customer","open","state","rowsPerPage","totalRows","curruntPage","componentDidMount","render","map","id","name","address"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Table, Icon } from \"semantic-ui-react\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      open: false,\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      value: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          customers: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleCustomerModal = (value, button, customer) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      customer: customer,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleCustomerModal(true, \"Add\")}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        {/* Table */}\r\n        <Table celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Address</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.customers.map((customer) => (\r\n              <Table.Row key={customer.id}>\r\n                <Table.Cell>{customer.name}</Table.Cell>\r\n                <Table.Cell>{customer.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleCustomerModal(true, \"Edit\", customer)\r\n                    }\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleCustomerModal(true, null, customer)\r\n                    }\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* drpdown selection */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}