{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\CustomerModal.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form, Icon } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nconst CustomerModal = props => {\n  const [Name, setName] = useState(\"\");\n  const [Address, setAddress] = useState(\"\");\n  const {\n    open,\n    button,\n    customerId,\n    customerName,\n    customerAddress,\n    toggleCustomerModal,\n    fetchCustomer\n  } = props;\n\n  const deleteCustomer = id => {\n    axios.delete(`/Customers/DeleteCustomer/${id}`).then(res => {\n      console.log(res.data);\n      fetchCustomer();\n      toggleCustomerModal(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const addCustomer = () => {\n    axios.post(\"/Customers/PostCustomer\", {\n      name: Name,\n      address: Address\n    }).then(res => {\n      console.log(res.data);\n      fetchCustomer();\n      toggleCustomerModal(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const editCustomer = id => {\n    axios.put(`/Customers/PutCustomer/${id}`, {\n      id: id,\n      name: Name,\n      address: Address\n    }).then(res => {\n      console.log(res.data);\n      fetchCustomer();\n      toggleCustomerModal(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  if (button === \"Add\") return /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Create Customer\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Customer Name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Customer Address\",\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => toggleCustomerModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: this.Address.length === 0 ? true : false,\n    color: \"green\",\n    icon: true,\n    onClick: addCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), \"Create\")));else if (button === \"Edit\") return /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Edit Customer\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: customerName,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: customerAddress,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => toggleCustomerModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    icon: true,\n    onClick: () => editCustomer(customerId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), \"Edit\")));else return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Delete Customer\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Are you sure?\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => toggleCustomerModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    labelPosition: \"right\",\n    icon: true,\n    onClick: () => deleteCustomer(customerId),\n    positive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), \"Delete\")));\n};\n\nexport default CustomerModal;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/CustomerModal.jsx"],"names":["React","useState","Button","Modal","Form","Icon","axios","CustomerModal","props","Name","setName","Address","setAddress","open","button","customerId","customerName","customerAddress","toggleCustomerModal","fetchCustomer","deleteCustomer","id","delete","then","res","console","log","data","catch","err","addCustomer","post","name","address","editCustomer","put","e","target","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,IAA9B,QAA0C,mBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AACJY,IAAAA,IADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,mBANI;AAOJC,IAAAA;AAPI,MAQFX,KARJ;;AAUA,QAAMY,cAAc,GAAIC,EAAD,IAAQ;AAC7Bf,IAAAA,KAAK,CACFgB,MADH,CACW,6BAA4BD,EAAG,EAD1C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,aAAa;AACbD,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KANH,EAOGU,KAPH,CAOUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KATH;AAUD,GAXD;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxBxB,IAAAA,KAAK,CACFyB,IADH,CACQ,yBADR,EACmC;AAC/BC,MAAAA,IAAI,EAAEvB,IADyB;AAE/BwB,MAAAA,OAAO,EAAEtB;AAFsB,KADnC,EAKGY,IALH,CAKSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,aAAa;AACbD,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KATH,EAUGU,KAVH,CAUUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAZH;AAaD,GAdD;;AAgBA,QAAMK,YAAY,GAAIb,EAAD,IAAQ;AAC3Bf,IAAAA,KAAK,CACF6B,GADH,CACQ,0BAAyBd,EAAG,EADpC,EACuC;AACnCA,MAAAA,EAAE,EAAEA,EAD+B;AAEnCW,MAAAA,IAAI,EAAEvB,IAF6B;AAGnCwB,MAAAA,OAAO,EAAEtB;AAH0B,KADvC,EAMGY,IANH,CAMSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,aAAa;AACbD,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAVH,EAWGU,KAXH,CAWUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAbH;AAcD,GAfD;;AAiBA,MAAIf,MAAM,KAAK,KAAf,EACE,oBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,IAAjB;AAAuB,IAAA,IAAI,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,QAAQ,EAAGuB,CAAD,IAAO1B,OAAO,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAQE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,QAAQ,EAAGF,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADF,CAFF,eAoBE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,MAAMpB,mBAAmB,CAAC,KAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,KAAKP,OAAL,CAAa4B,MAAb,KAAwB,CAAxB,GAA4B,IAA5B,GAAmC,KAD/C;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,OAAO,EAAET,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,WAJF,CApBF,CADF,CADF,KAsCK,IAAIhB,MAAM,KAAK,MAAf,EACH,oBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,IAAjB;AAAuB,IAAA,IAAI,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,KAAK,EAAEG,YADT;AAEE,IAAA,QAAQ,EAAGoB,CAAD,IAAO1B,OAAO,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAQE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,KAAK,EAAErB,eADT;AAEE,IAAA,QAAQ,EAAGmB,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADF,CAFF,eAoBE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,MAAMpB,mBAAmB,CAAC,KAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,IAAI,MAA1B;AAA2B,IAAA,OAAO,EAAE,MAAMgB,YAAY,CAACnB,UAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,SAJF,CApBF,CADF,CADG,KAkCH,oBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,MAAMK,mBAAmB,CAAC,KAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,IAAI,MAFN;AAGE,IAAA,OAAO,EAAE,MAAME,cAAc,CAACL,UAAD,CAH/B;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,WAJF,CAHF,CADF;AAoBH,CAxJD;;AA0JA,eAAeR,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal, Form, Icon } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nconst CustomerModal = (props) => {\r\n  const [Name, setName] = useState(\"\");\r\n  const [Address, setAddress] = useState(\"\");\r\n\r\n  const {\r\n    open,\r\n    button,\r\n    customerId,\r\n    customerName,\r\n    customerAddress,\r\n    toggleCustomerModal,\r\n    fetchCustomer,\r\n  } = props;\r\n\r\n  const deleteCustomer = (id) => {\r\n    axios\r\n      .delete(`/Customers/DeleteCustomer/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        fetchCustomer();\r\n        toggleCustomerModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addCustomer = () => {\r\n    axios\r\n      .post(\"/Customers/PostCustomer\", {\r\n        name: Name,\r\n        address: Address,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        fetchCustomer();\r\n        toggleCustomerModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const editCustomer = (id) => {\r\n    axios\r\n      .put(`/Customers/PutCustomer/${id}`, {\r\n        id: id,\r\n        name: Name,\r\n        address: Address,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        fetchCustomer();\r\n        toggleCustomerModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  if (button === \"Add\")\r\n    return (\r\n      <Modal centered={true} open={open}>\r\n        <Modal.Header>Create Customer</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input\r\n                placeholder=\"Customer Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Address</label>\r\n              <input\r\n                placeholder=\"Customer Address\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => toggleCustomerModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            disabled={this.Address.length === 0 ? true : false}\r\n            color=\"green\"\r\n            icon\r\n            onClick={addCustomer}\r\n          >\r\n            <Icon name=\"check\" />\r\n            Create\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  else if (button === \"Edit\")\r\n    return (\r\n      <Modal centered={true} open={open}>\r\n        <Modal.Header>Edit Customer</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input\r\n                value={customerName}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Address</label>\r\n              <input\r\n                value={customerAddress}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => toggleCustomerModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"green\" icon onClick={() => editCustomer(customerId)}>\r\n            <Icon name=\"check\" />\r\n            Edit\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  else\r\n    return (\r\n      <Modal open={open}>\r\n        <Modal.Header>Delete Customer</Modal.Header>\r\n        <Modal.Content>Are you sure?</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => toggleCustomerModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            labelPosition=\"right\"\r\n            icon\r\n            onClick={() => deleteCustomer(customerId)}\r\n            positive\r\n          >\r\n            <Icon name=\"times\" />\r\n            Delete\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default CustomerModal;\r\n"]},"metadata":{},"sourceType":"module"}