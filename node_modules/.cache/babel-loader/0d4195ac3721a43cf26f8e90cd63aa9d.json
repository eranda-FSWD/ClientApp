{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Dropdown } from \"semantic-ui-react\";\nimport CustomerTable from \"./CustomerTable\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\n      const indexOfLastRow = curruntPage * rowsPerPage;\n      const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n      const customersPerPage = this.state.customers.slice(indexOfFirstRow, indexOfLastRow);\n      this.setState({\n        customers: customersPerPage\n      });\n    };\n\n    this.fetchCustomers = () => {\n      axios.get(\"/Customers/GetCustomer\").then(({\n        data\n      }) => {\n        // console.log(data);\n        this.setState({\n          customers: data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.options = [{\n      key: 1,\n      text: \"10\",\n      value: 10\n    }, {\n      key: 2,\n      text: \"20\",\n      value: 20\n    }, {\n      key: 3,\n      text: \"50\",\n      value: 50\n    }];\n\n    this.onChangeRowNumbers = e => {\n      this.setState({\n        rowsPerPage: e.target.value\n      });\n      console.log(this.state.rowsPerPage, e.target.value);\n    };\n\n    this.state = {\n      customers: [],\n      open: false,\n      rowsPerPage: 10,\n      totalRows: 0,\n      customer: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  } // Records per the page\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomerTable, {\n      customers: this.state.customers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      floated: \"left\",\n      defaultValue: 10,\n      options: this.options,\n      simple: true,\n      onChange: e => this.onChangeRowNumbers(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Customer;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/Customer.jsx"],"names":["React","Component","axios","Button","Container","Dropdown","CustomerTable","Customer","constructor","props","fetchRecordsPerPage","curruntPage","rowsPerPage","indexOfLastRow","indexOfFirstRow","customersPerPage","state","customers","slice","setState","fetchCustomers","get","then","data","catch","err","console","log","options","key","text","value","onChangeRowNumbers","e","target","open","totalRows","customer","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Dropdown } from \"semantic-ui-react\";\r\nimport CustomerTable from \"./CustomerTable\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      open: false,\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const customersPerPage = this.state.customers.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ customers: customersPerPage });\r\n  };\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          customers: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  options = [\r\n    { key: 1, text: \"10\", value: 10 },\r\n    { key: 2, text: \"20\", value: 20 },\r\n    { key: 3, text: \"50\", value: 50 },\r\n  ];\r\n  onChangeRowNumbers = (e) => {\r\n    this.setState({\r\n      rowsPerPage: e.target.value,\r\n    });\r\n    console.log(this.state.rowsPerPage, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <CustomerTable customers={this.state.customers} />\r\n        <Dropdown\r\n          floated=\"left\"\r\n          defaultValue={10}\r\n          options={this.options}\r\n          simple\r\n          onChange={(e) => this.onChangeRowNumbers(e)}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}