{"ast":null,"code":"var _jsxFileName = \"G:\\\\Talent\\\\Talent\\\\Talent\\\\ClientApp\\\\src\\\\components\\\\Customer\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\nimport CustomerModal from \"./CustomerModal\";\nimport Pagination from \"../Common/Pagination\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCustomers = () => {\n      axios.get(\"/Customers/GetCustomer\").then(({\n        data\n      }) => {\n        return data; // console.log(data);\n\n        /* this.setState({\r\n          customers: data,\r\n        }); */\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleCustomerModal = (value, button, customer) => {\n      this.setState({\n        open: value,\n        button: button,\n        customer: customer\n      });\n    };\n\n    this.handleDropdown = (event, data) => {\n      this.setState({\n        [data.name]: data.value\n      });\n    };\n\n    this.fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\n      this.fetchCustomers();\n      const indexOfLastRow = curruntPage * rowsPerPage;\n      const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n      const customersPerPage = this.state.customers.slice(indexOfFirstRow, indexOfLastRow);\n      this.setState({\n        customers: customersPerPage\n      });\n    };\n\n    this.state = {\n      customers: [],\n      customer: {},\n      open: false,\n      button: \"\",\n      rowsPerPage: 10,\n      totalRows: 0,\n      curruntPage: 1,\n      value: 10\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.curruntPage, this.state.rowsPerPage);\n    this.fetchRecordsPerPage(this.state.curruntPage, this.state.rowsPerPage);\n  }\n\n  render() {\n    const {\n      open,\n      button,\n      customer\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomerModal, {\n      open: open,\n      button: button,\n      customer: customer,\n      fetchCustomers: this.fetchCustomers,\n      toggleCustomerModal: this.toggleCustomerModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => this.toggleCustomerModal(true, \"Add\", null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"New Customer\"), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      striped: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, this.state.customers.map(customer => /*#__PURE__*/React.createElement(Table.Row, {\n      key: customer.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, customer.address), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, \"Edit\", customer),\n      color: \"yellow\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), \"EDIT\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCustomerModal(true, \"\", customer),\n      color: \"red\",\n      icon: true,\n      labelPosition: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), \"DELETE\")))))), /*#__PURE__*/React.createElement(Pagination, {\n      totalRows: this.state.customers.length,\n      rowsPerPage: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      compact: true,\n      selection: true,\n      options: options,\n      onChange: this.handleDropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst options = [{\n  key: 10,\n  text: \"10\",\n  value: 10\n}, {\n  key: 20,\n  text: \"20\",\n  value: 20\n}, {\n  key: 30,\n  text: \"30\",\n  value: 30\n}];\nexport default Customer;","map":{"version":3,"sources":["G:/Talent/Talent/Talent/ClientApp/src/components/Customer/Customer.jsx"],"names":["React","Component","axios","Button","Container","Table","Dropdown","Icon","CustomerModal","Pagination","Customer","constructor","props","fetchCustomers","get","then","data","catch","err","console","log","toggleCustomerModal","value","button","customer","setState","open","handleDropdown","event","name","fetchRecordsPerPage","curruntPage","rowsPerPage","indexOfLastRow","indexOfFirstRow","customersPerPage","state","customers","slice","totalRows","componentDidMount","render","map","id","address","length","options","key","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport CustomerModal from \"./CustomerModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      value: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.curruntPage, this.state.rowsPerPage);\r\n    this.fetchRecordsPerPage(this.state.curruntPage, this.state.rowsPerPage);\r\n  }\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        return data;\r\n        // console.log(data);\r\n        /* this.setState({\r\n          customers: data,\r\n        }); */\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleCustomerModal = (value, button, customer) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      customer: customer,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    this.fetchCustomers();\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const customersPerPage = this.state.customers.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ customers: customersPerPage });\r\n  };\r\n\r\n  render() {\r\n    const { open, button, customer } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <CustomerModal\r\n          open={open}\r\n          button={button}\r\n          customer={customer}\r\n          fetchCustomers={this.fetchCustomers}\r\n          toggleCustomerModal={this.toggleCustomerModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleCustomerModal(true, \"Add\", null)}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        {/* Table */}\r\n        <Table celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Address</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.customers.map((customer) => (\r\n              <Table.Row key={customer.id}>\r\n                <Table.Cell>{customer.name}</Table.Cell>\r\n                <Table.Cell>{customer.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleCustomerModal(true, \"Edit\", customer)\r\n                    }\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleCustomerModal(true, \"\", customer)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination totalRows={this.state.customers.length} rowsPerPage={10} />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          options={options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst options = [\r\n  { key: 10, text: \"10\", value: 10 },\r\n  { key: 20, text: \"20\", value: 20 },\r\n  { key: 30, text: \"30\", value: 30 },\r\n];\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}